{"version":3,"sources":["component/App.js","actions/actions.js","constant/constant.js","reducer/rootReducer.js","index.js"],"names":["App","props","state","text","dueDate","this","ucAddReminder","setState","reminders","className","map","reminder","key","id","moment","Date","fromNow","onClick","ev","ucdeleteReminder","console","log","type","name","placeholder","value","onChange","target","addreminder","reminderList","ucClearReminder","Component","connect","action","Math","random","removeById","filter","store","createStore","read_cookie","bake_cookie","ReactDom","render","document","getElementById"],"mappings":"sRAKMA,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAM,GACNC,QAAS,MAJE,E,2EASL,MAEeC,KAAKH,MAAxBC,EAFI,EAEJA,KAAOC,EAFH,EAEGA,QACbC,KAAKJ,MAAMK,cAAcH,EAAOC,GAChCC,KAAKE,SAAS,CAAEJ,KAAM,O,qCAGV,IAAD,OACHK,EAAcH,KAAKJ,MAAnBO,UAoBR,OAnBW,wBAAIC,UAAU,uBAEjBD,EAAUE,KAAI,SAAAC,GACV,OACI,wBAAIC,IAAKD,EAASE,GAAIJ,UAAU,mBAC5B,yBAAKA,UAAU,aACX,kCAAQE,EAASR,KAAjB,KACA,6BAAK,4BAAKW,IAAO,IAAIC,KAAKJ,EAASP,UAAUY,aAEjD,yBAAKP,UAAU,iBAAiBG,IAAKD,EAASE,GAC1CI,QAAS,SAACC,GAAD,OAAQ,EAAKjB,MAAMkB,iBAAiBR,EAASE,MAD1D,mB,+BAad,IAAD,OAEL,OADAO,QAAQC,IAAI,eAAgBhB,KAAKJ,OAE7B,yBAAKQ,UAAU,OAEX,yBAAKA,UAAU,SAAf,gBAGA,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,6BACX,2BAAOa,KAAK,OAAOC,KAAK,GAAGV,GAAG,GAAGJ,UAAU,eAAee,YAAY,gBAClEC,MAAOpB,KAAKH,MAAMC,KAClBuB,SAAU,SAACR,GAAD,OAAQ,EAAKX,SAAS,CAAEJ,KAAMe,EAAGS,OAAOF,WAEtD,2BAAOhB,UAAU,eAAea,KAAK,iBACjCI,SAAU,SAACR,GAAD,OAAQ,EAAKX,SAAS,CAAEH,QAASc,EAAGS,OAAOF,WAEzD,4BAAQH,KAAK,SAASC,KAAK,GAAGV,GAAG,GAAGJ,UAAU,kBAC1CQ,QAAS,kBAAM,EAAKW,gBADxB,kBAKPvB,KAAKwB,eACN,yBAAKpB,UAAU,IACf,4BAAQa,KAAK,SAASC,KAAK,GAAGV,GAAG,GAAGJ,UAAU,+BAClCQ,QAAS,kBAAM,EAAKhB,MAAM6B,oBADtC,wB,GAjEEC,aAgFHC,mBANf,SAAyB9B,GACrB,MAAO,CACHM,UAAWN,KAIqB,CAAEI,cCjFb,SAACH,EAAOC,GAOnC,MANe,CACbkB,KCNwB,eDOxBnB,OACAC,YD6EqDe,iBCxElD,SAA0BN,GAQ/B,MAJe,CACbS,KCjB2B,kBDkB1BT,GAAKA,IDkEmEiB,gBC9DtE,WAIL,MAHe,CACbR,KCvB0B,oBFmFfU,CAAgFhC,G,sBGlFzFW,EAAW,SAACsB,GAAY,IACpB9B,EAAkB8B,EAAlB9B,KAAMC,EAAY6B,EAAZ7B,QACZ,MAAO,CACHS,GAAIqB,KAAKC,SACThC,OACAC,YAIFgC,EAAa,WAAqB,IAApBlC,EAAmB,uDAAX,GAAIW,EAAO,uCAC7BL,EAAYN,EAAMmC,QAAO,SAAA1B,GAAQ,OAAIA,EAASE,KAAOA,KAE3D,OAAOL,GCRL8B,EAAQC,aDWa,WAAyB,IAAxBrC,EAAuB,uDAAf,GAAI+B,EAAW,uCAI3CzB,EAAY,KAEhB,OADAN,EAAQsC,sBAAa,aACbP,EAAOX,MACX,IDzBoB,eC4BhB,OAFAd,EAAS,sBAAON,GAAP,CAAcS,EAASsB,KAChCQ,sBAAa,YAAcjC,GACpBA,EACX,ID5BuB,kBC+BnB,OAFAA,EAAY4B,EAAYlC,EAAS+B,EAAOpB,IACxC4B,sBAAa,YAAcjC,GACnBA,EACZ,ID/BsB,iBCkClB,OAFAA,EAAc,GACdiC,sBAAa,YAAcjC,GACnBA,EACZ,QACI,OAAON,MC7BnBwC,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,OACUM,SAASC,eAAe,W","file":"static/js/main.069f7e9c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { ucAddReminder, ucdeleteReminder  , ucClearReminder} from '../actions/actions'\r\nimport { connect } from 'react-redux';\r\nimport moment  from 'moment';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            text: '',\r\n            dueDate: null\r\n        }\r\n    }\r\n\r\n\r\n    addreminder() {\r\n        // console.log('this.state'  , this.state.text)\r\n        let { text , dueDate } = this.state  ;\r\n        this.props.ucAddReminder(text , dueDate )\r\n        this.setState({ text: '' })\r\n        // console.log('this.state.text', this.state.text)\r\n    }\r\n    reminderList() {\r\n        const { reminders } = this.props;\r\n        let list = <ul className=\"list-group col-sm-4\">\r\n            {\r\n                reminders.map(reminder => {\r\n                    return (\r\n                        <li key={reminder.id} className=\"list-group-item\">\r\n                            <div className=\"list-item\" >\r\n                                <div>  {reminder.text} </div>\r\n                                <div><em>{moment(new Date(reminder.dueDate)).fromNow()}</em></div>\r\n                            </div>\r\n                            <div className=\" delete-button\" key={reminder.id}\r\n                                onClick={(ev) => this.props.ucdeleteReminder(reminder.id)}\r\n                            >\r\n                                &#x2715;  {/* unicode   */}\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n        return list;\r\n\r\n    }\r\n    render() {\r\n        console.log('this.props :', this.props)\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                <div className=\"title\">\r\n                    Reminder Pro\r\n                </div>\r\n                <div className=\"form-group form\">\r\n                    <div className=\"form-inline reminder-form\">\r\n                        <input type=\"text\" name=\"\" id=\"\" className=\"form-control\" placeholder=\"I have to ...\"\r\n                            value={this.state.text}\r\n                            onChange={(ev) => this.setState({ text: ev.target.value })}\r\n                        />\r\n                        <input className=\"form-control\" type=\"datetime-local\"\r\n                            onChange={(ev) => this.setState({ dueDate: ev.target.value })}\r\n                        />\r\n                        <button type=\"button\" name=\"\" id=\"\" className=\"btn btn-primary\"\r\n                            onClick={() => this.addreminder()}\r\n                        >Add Reminder</button>\r\n                    </div>\r\n                </div>\r\n                {this.reminderList()}\r\n                <div className=\"\">\r\n                <button type=\"button\" name=\"\" id=\"\" className=\"btn btn-danger delete-button\"\r\n                            onClick={() => this.props.ucClearReminder()}\r\n                        >Clear Reminder</button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        reminders: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { ucAddReminder, ucdeleteReminder  , ucClearReminder})(App); ","import { ADD_REMINDER, DELETE_REMINDER , CLEAR_REMINDER } from '../constant/constant'\r\n\r\n\r\n\r\nexport const ucAddReminder = (text , dueDate ) => {\r\n  const action = {\r\n    type: ADD_REMINDER,\r\n    text,\r\n    dueDate \r\n  }\r\n  // console.log('action in addReminder', dueDate);\r\n  return action;\r\n}\r\nexport function ucdeleteReminder(id) {\r\n  // console.log('id', id)\r\n  // console.log('this', this)\r\n\r\n  const action = {\r\n    type: DELETE_REMINDER,\r\n     id : id\r\n  }\r\n  return action;\r\n}\r\nexport function ucClearReminder() {\r\n  const action = {\r\n    type: CLEAR_REMINDER,\r\n  }\r\n  return action;\r\n}","export const ADD_REMINDER = 'ADD_REMINDER' ; \r\nexport const DELETE_REMINDER = 'DELETE_REMINDER' ; \r\nexport const CLEAR_REMINDER = 'CLEAR_REMINDER' ; ","import { ADD_REMINDER , DELETE_REMINDER  , CLEAR_REMINDER } from '../constant/constant'\r\nimport { read_cookie , bake_cookie}  from 'sfcookies'\r\n\r\nconst reminder = (action) => {\r\n    let { text, dueDate } = action;\r\n    return {\r\n        id: Math.random(),\r\n        text,\r\n        dueDate\r\n    }\r\n}\r\n\r\nconst removeById = (state = [], id) => {\r\n    const reminders = state.filter(reminder => reminder.id !== id);\r\n    // console.log('new reduced reminders', reminders);\r\n    return reminders;\r\n  }\r\n\r\nexport const rootReducer = (state = [], action) => {\r\n    // console.log('root reduces is called')\r\n    // console.log('action', action)\r\n\r\n    let reminders = null;\r\n    state = read_cookie( 'reminders' ) // if browser is refresh then read data from cookie\r\n    switch (action.type) {\r\n        case ADD_REMINDER:\r\n            reminders = [...state, reminder(action)];\r\n            bake_cookie( 'reminders' , reminders ) // setting values in cookie\r\n            return reminders;\r\n        case DELETE_REMINDER:\r\n            reminders = removeById( state ,  action.id)\r\n            bake_cookie( 'reminders' , reminders ) // setting values in cookie\r\n            return  reminders ;\r\n        case CLEAR_REMINDER:\r\n            reminders  =  [] ;  // clear reminder \r\n            bake_cookie( 'reminders' , reminders ) // clear cookie\r\n            return  reminders ;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './index.css'\r\nimport App from './component/App'\r\nimport {createStore} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport {rootReducer}  from './reducer/rootReducer'\r\nconst store = createStore(rootReducer)\r\n\r\nReactDom.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider> , document.getElementById('root'))\r\n\r\n"],"sourceRoot":""}